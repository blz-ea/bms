version: '3'
services:
  frontend_admin:
    container_name: bms_frontend_admin
    image: 'bms/frontend_admin'
    build:
      context: ./frontends
      args:
        - app=admin
      dockerfile: ./Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - TZ=${TZ}
      - TITLE=${TITLE}
      - TITLE_SHORT=${TITLE_SHORT}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_BOOKING_URL=${FRONTEND_BOOKING_URL}
      - FRONTEND_ADMIN_URL=${FRONTEND_ADMIN_URL}
      - FRONTEND_PORT=${FRONTEND_PORT}
      - STATIC_FILES_URL=${STATIC_FILES_URL}
      - CLIENT_API_URL=${CLIENT_API_URL}
      - FIREBASE_PUBLIC_API_KEY=${FIREBASE_PUBLIC_API_KEY}
    restart: always

  frontend_booking:
    container_name: bms_frontend_booking
    image: 'bms/frontend_booking'
    build:
      context: ./frontends
      args:
        - app=booking
      dockerfile: ./Dockerfile
    ports:
      - "${FRONTEND_BOOKING_PORT}:${FRONTEND_BOOKING_PORT}"
    environment:
      - TZ=${TZ}
      - TITLE=${TITLE}
      - TITLE_SHORT=${TITLE_SHORT}
      - JWT_SECRET=${JWT_SECRET}
      - STATIC_FILES_URL=${STATIC_FILES_URL}
      - FRONTEND_BOOKING_PORT=${FRONTEND_BOOKING_PORT}
      - FRONTEND_BOOKING_URL=${FRONTEND_BOOKING_URL}
      - FRONTEND_ADMIN_URL=${FRONTEND_ADMIN_URL}
      - CLIENT_API_URL=${CLIENT_API_URL}
      - FIREBASE_PUBLIC_API_KEY=${FIREBASE_PUBLIC_API_KEY}
    restart: always

  backend:
    container_name: bms_backend
    image: 'bms/backend'
    build:
      context: ./backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - TZ=${TZ}
      - NODE_ENV=${NODE_ENV}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_ADMIN_URL=${FRONTEND_ADMIN_URL}
      - FRONTEND_BOOKING_URL=${FRONTEND_BOOKING_URL}
      - STATIC_FILES_URL=${STATIC_FILES_URL}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - BACKEND_PORT=${BACKEND_PORT}
      - CLIENT_API_URL=${CLIENT_API_URL}
      
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - SLACK_API_KEY=${SLACK_API_KEY}
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - FIREBASE_PUBLIC_API_KEY=${FIREBASE_PUBLIC_API_KEY}

      - MONGODB_HOST=${MONGODB_HOST}
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_SSL=${MONGODB_SSL}
      - MONGODB_SRV=${MONGODB_SRV}
      - MONGODB_AUTHENTICATION_DATABASE=${MONGODB_AUTHENTICATION_DATABASE}
      
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASE=${REDIS_DATABASE}
    volumes:
      - bms-backend-data:/src/app/public/uploads
    restart: always
    depends_on:
      - mongo
      - redis
    networks:
      - bms

  redis:
    container_name: bms_redis
    image: "redis:alpine"
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    #ports:
    #  - ${REDIS_PORT}:6379
    volumes:
      - bms-redis-data:/data
    restart: always
    networks:
      - bms

  mongo:
    container_name: bms_mongo
    image: mongo
    hostname: mongo
    environment:
      - MONGO_INITDB_DATABASE="${MONGODB_NAME}"
    #ports:
    #  - ${MONGODB_PORT}:27017
    volumes:
      - bms-mongo-data:/data/db
    restart: always
    networks:
      - bms

networks:
  bms:

volumes:
  bms-backend-data:
  bms-redis-data:
  bms-mongo-data: